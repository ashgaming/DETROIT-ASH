{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\Desktop\\\\DETROIT ASH\\\\detroit\\\\src\\\\components\\\\YouTubeVideos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTubeVideos = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    // Replace 'YOUR_API_KEY' with your actual YouTube API key\n    const apiKey = 'YOUR_API_KEY';\n    const channelId = 'YOUR_CHANNEL_ID'; // Replace with your YouTube channel ID\n\n    const apiUrl = `https://www.youtube.com/channel/UC3VP0rbTvraMvA4dWJaF5uw`;\n    axios.get(apiUrl).then(response => {\n      setVideos(response.data.items);\n    }).catch(error => {\n      console.error('Error fetching YouTube videos:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest YouTube Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"560\",\n          height: \"315\",\n          src: `https://www.youtube.com/embed/${video.id.videoId}`,\n          title: video.snippet.title,\n          frameBorder: \"0\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, video.id.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(YouTubeVideos, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = YouTubeVideos;\nexport default YouTubeVideos;\nvar _c;\n$RefreshReg$(_c, \"YouTubeVideos\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","YouTubeVideos","_s","videos","setVideos","apiKey","channelId","apiUrl","get","then","response","data","items","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","video","width","height","src","id","videoId","title","snippet","frameBorder","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/Nikita/Desktop/DETROIT ASH/detroit/src/components/YouTubeVideos.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst YouTubeVideos = () => {\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Replace 'YOUR_API_KEY' with your actual YouTube API key\r\n    const apiKey = 'YOUR_API_KEY';\r\n    const channelId = 'YOUR_CHANNEL_ID'; // Replace with your YouTube channel ID\r\n\r\n    const apiUrl = `https://www.youtube.com/channel/UC3VP0rbTvraMvA4dWJaF5uw`;\r\n\r\n    axios.get(apiUrl)\r\n      .then(response => {\r\n        setVideos(response.data.items);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching YouTube videos:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Latest YouTube Videos</h2>\r\n      <div>\r\n        {videos.map(video => (\r\n          <div key={video.id.videoId}>\r\n            <iframe\r\n              width=\"560\"\r\n              height=\"315\"\r\n              src={`https://www.youtube.com/embed/${video.id.videoId}`}\r\n              title={video.snippet.title}\r\n              frameBorder=\"0\"\r\n              allowFullScreen\r\n            ></iframe>\r\n            <p>{video.snippet.title}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YouTubeVideos;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,MAAM,GAAG,cAAc;IAC7B,MAAMC,SAAS,GAAG,iBAAiB,CAAC,CAAC;;IAErC,MAAMC,MAAM,GAAI,0DAAyD;IAEzET,KAAK,CAACU,GAAG,CAACD,MAAM,CAAC,CACdE,IAAI,CAACC,QAAQ,IAAI;MAChBN,SAAS,CAACM,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;IAChC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BpB,OAAA;MAAAgB,QAAA,EACGb,MAAM,CAACkB,GAAG,CAACC,KAAK,iBACftB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UACEuB,KAAK,EAAC,KAAK;UACXC,MAAM,EAAC,KAAK;UACZC,GAAG,EAAG,iCAAgCH,KAAK,CAACI,EAAE,CAACC,OAAQ,EAAE;UACzDC,KAAK,EAAEN,KAAK,CAACO,OAAO,CAACD,KAAM;UAC3BE,WAAW,EAAC,GAAG;UACfC,eAAe;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eACVpB,OAAA;UAAAgB,QAAA,EAAIM,KAAK,CAACO,OAAO,CAACD;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GATpBE,KAAK,CAACI,EAAE,CAACC,OAAO;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUrB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvCID,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}